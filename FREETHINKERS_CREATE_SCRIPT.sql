
--------------------------------------------- FREETHINKERS CREATE SRIPT-------------------------------------------------------------------------------


PURGE RECYCLEBIN;

DECLARE
table_count NUMBER(10);



BEGIN
    SELECT count(*) into table_count FROM user_tables where table_name = 'TABLE_TRACKERS';
    
    IF(table_count > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE TABLE_TRACKERS ALREADY EXISTS!');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE TABLE_TRACKERS
    (
       TABLE_NAME varchar2(100),
       TABLE_QUERY varchar2(5000) NOT NULL,
       DROP_QUERY varchar2(5000) NOT NULL,
       CONSTRAINT TRACKER_TABLE_PK PRIMARY KEY(TABLE_NAME)
    )
    ';
    DBMS_OUTPUT.PUT_LINE('TABLE TABLE_TRACKERS CREATED SUCCESSFULLY');
    
    
    -- DDL For Table BANK   
    EXECUTE IMMEDIATE q'[INSERT INTO TABLE_TRACKERS VALUES('BANK','CREATE TABLE BANK(
    Bank_Code Number(20) PRIMARY KEY,
    Bank_Name Varchar(50),  
    Bank_Type VARChar(50))',
    'DROP TABLE BANK')]';
    
    -- DDL For Table BRANCH
    EXECUTE IMMEDIATE q'[INSERT INTO TABLE_TRACKERS VALUES('BRANCH','CREATE TABLE BRANCH(
    Branch_ID Varchar(50) PRIMARY KEY,
    Branch_Name Varchar(50),
    Branch_Street Varchar(50),
    Branch_City VARCHAR(50),
    Branch_ZipCode Number(20),
    FK_BANK_CODE NUMBER(20) REFERENCES BANK(Bank_Code) ON DELETE CASCADE)',
    'DROP TABLE BRANCH')]';
    
    -- DDL For Table EMPLOYEE
    EXECUTE IMMEDIATE q'[INSERT INTO TABLE_TRACKERS VALUES('EMPLOYEE','CREATE TABLE EMPLOYEE(
    EMPLOYEE_ID VARCHAR(50) PRIMARY KEY,
    EMPLOYEE_FIRSTNAME VARCHAR(50),
    EMPLOYEE_LASTNAME VARCHAR(50),
    EMPLOYEE_EMAIL VARCHAR(50),
    EMPLOYEE_PHNO VARCHAR(50),
    EMPLOYEE_STREET VARCHAR(50),
    EMPLOYEE_CITY VARCHAR(50),
    EMPLOYEE_ZIPCODE NUMBER(20))',
    'DROP TABLE EMPLOYEE')]';
    
     -- DDL For Table ROLES
    EXECUTE IMMEDIATE q'[INSERT INTO TABLE_TRACKERS VALUES('ROLES','CREATE TABLE ROLES(
    Role_Id Varchar(50) PRIMARY KEY,
    Role_Name VARChar(50),
    Role_Description VARChar(50))',
    'DROP TABLE ROLES')]';
    
    --DDL For Table PERMISSION
    EXECUTE IMMEDIATE q'[INSERT INTO TABLE_TRACKERS VALUES('PERMISSION','CREATE TABLE PERMISSION(
    Permission_Id Varchar(50) PRIMARY KEY,
    Permission_Type Varchar(50),
    Permission_Scope Varchar(50),
    FK_Role_Id Varchar(30) REFERENCES ROLES(Role_Id) ON DELETE CASCADE)',
    'DROP TABLE PERMISSION')]';
    
    --DDL For Table USERS
    EXECUTE IMMEDIATE q'[INSERT INTO TABLE_TRACKERS VALUES('USERS','CREATE TABLE USERS(
    User_Id Varchar(50) PRIMARY KEY,
    Rtn_User VARChar(50),
    USER_UNIQUE_CHARACTER VARCHAR(50),
    FK_Branch_ID Varchar(50) REFERENCES BRANCH(Branch_ID) ON DELETE CASCADE,
    FK_Permission_ID Varchar(30) REFERENCES PERMISSION(Permission_ID) ON DELETE CASCADE)',
    'DROP TABLE USERS')]';
    
    --DDL For Table CUSTOMER
    EXECUTE IMMEDIATE q'[INSERT INTO TABLE_TRACKERS VALUES('CUSTOMER','CREATE TABLE CUSTOMER(
    CUSTOMER_ID VARCHAR(50) PRIMARY KEY NOT NULL,
    CUSTOMER_FIRSTNAME VARCHAR(50) NOT NULL,
    CUSTOMER_LASTNAME VARCHAR(50) NOT NULL,
    CUSTOMER_PHNO NUMBER(20) NOT NULL,
    CUSTOMER_STREET VARCHAR(50) NOT NULL,
    CUSTOMER_CITY VARCHAR(50) NOT NULL,
    CUSTOMER_ZIPCODE NUMBER(20) NOT NULL,
    FK_EMP_ID VARCHAR(50) REFERENCES EMPLOYEE(EMPLOYEE_ID) ON DELETE CASCADE,
    FK_USER_ID VARCHAR(30) REFERENCES USERS(User_Id) ON DELETE CASCADE)',
    'DROP TABLE CUSTOMER')]';
    
    --DDL For Table ACCOUNT
    EXECUTE IMMEDIATE q'[INSERT INTO TABLE_TRACKERS VALUES('ACCOUNTS','CREATE TABLE ACCOUNTS(
    ACCOUNT_NO NUMBER(20) PRIMARY KEY,
    ACCOUNT_TYPE VARCHAR(50),
    ACCOUNT_BALANCE NUMBER(20),
    ACCOUNT_OPENINGDATE TIMESTAMP,
    FK_CUSTOMER_ID VARCHAR(50) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE)',
    'DROP TABLE ACCOUNTS')]';   
    
    --DDL For Table TRANSACTION
    EXECUTE IMMEDIATE q'[INSERT INTO TABLE_TRACKERS VALUES('TRANSACTION','CREATE TABLE TRANSACTION(
    Transaction_Id NUMBER(20) PRIMARY KEY,
    Transaction_amount NUMBER(20),
    Transaction_details Varchar(50),
    Transaction_Date TIMESTAMP,
    Transaction_Type VARChar(50),
    FKS_ACCOUNT_NO NUMBER(20) REFERENCES ACCOUNTS(ACCOUNT_NO) ON DELETE CASCADE,
    FKR_ACCOUNT_NO NUMBER(20) REFERENCES ACCOUNTS(ACCOUNT_NO) ON DELETE CASCADE)',
   'DROP TABLE TRANSACTION')]';



   --DDL For Table LOAN
    EXECUTE IMMEDIATE q'[INSERT INTO TABLE_TRACKERS VALUES('LOAN','CREATE TABLE LOAN(
    LOAN_ID VARCHAR(50) PRIMARY KEY,
    LOAN_AMOUNT NUMBER(20),
    LOAN_TYPE VARCHAR(50),
    LOAN_DURATION VARCHAR(50),
    LOAN_DISPERSALDT TIMESTAMP,
    FK_loan_ACCOUNT_NO NUMBER(20) REFERENCES ACCOUNTS(ACCOUNT_NO) ON DELETE CASCADE)',
    'DROP TABLE LOAN')]';
    
    END IF;
    
    END;
    
    
    /
    
DECLARE
track table_trackers%ROWTYPE;
CURSOR trial IS select * from table_trackers;
name_check number(20);
BEGIN
    OPEN trial;
    LOOP
        FETCH trial into track;
        EXIT WHEN trial%NOTFOUND;
     select count(*) into name_check from tab where tname = track.table_name;
        IF name_check > 0 THEN
        dbms_output.put_line(track.table_name || ' Already Exists');
        ELSE
        dbms_output.put_line(track.table_name || ' doesnt exist');
        EXECUTE IMMEDIATE track.table_query;
        END IF;
        
    END LOOP;
    CLOSE trial;
END;
